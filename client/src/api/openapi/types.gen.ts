// This file is auto-generated by @hey-api/openapi-ts

export type AuthSource = 'google';

export type IChallenge = {
    id: number;
    title: string;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    author: IUser;
    owners: Array<IUser>;
    series: Array<IChallengeSeries>;
    category: ICategory;
    version: number;
    versionCreatedAt: string;
    versionAuthor: IUser;
    createdAt: string;
    updatedAt: string;
    deletedAt?: string | null;
    description?: string | null;
    difficultyExplanation?: string | null;
};

export type effortLevel = 1 | 2 | 3 | 4 | 5;

export type requiredExpertise = 0 | 1 | 2 | 3;

export type ICategory = {
    id: number;
    name: string;
    parentCategory: (ICategory) | null;
    challenges: Array<IChallenge>;
    challengeSeries: Array<IChallengeSeries>;
    childrenCategories: Array<ICategory>;
    createdAt: string;
    updatedAt: string;
};

export type IChallengeSeries = {
    id: number;
    title: string;
    description: string;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    difficultyExplanation: string;
    challenges: Array<IChallenge>;
    category: ICategory;
    author: IUser;
    owners: Array<IUser>;
    version: number;
    versionCreatedAt: string;
    versionAuthor: IUser;
    createdAt: string;
    updatedAt: string;
};

export type IUser = {
    id: number;
    email: string;
    firstName: string;
    lastName: string;
    authSource: AuthSource;
    challenges: Array<IChallenge>;
    challengeSeries: Array<IChallengeSeries>;
};

export type CreateChallengeValidationSchema = {
    title: string;
    description: string;
    seriesId?: number;
    categoryId: number;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    difficultyExplanation?: string;
};

export type CreateChallengeSeriesValidationSchema = {
    title: string;
    description: string;
    categoryId: number;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    difficultyExplanation?: string;
};

export type User = {
    id: number;
    email: string;
    firstName: string;
    lastName: string;
    authSource: AuthSource;
    challenges: Array<Challenge>;
    challengeSeries: Array<ChallengeSeries>;
    modifiedSeries: Array<ChallengeSeries>;
    modifiedChallenges: Array<Challenge>;
    createdAt: string;
    updatedAt: string;
    deletedAt: string;
    sessions: Array<Session>;
};

export type Challenge = {
    id: number;
    title: string;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    author: User;
    owners: Array<User>;
    series: Array<ChallengeSeries>;
    category: Category;
    version: number;
    versionCreatedAt: string;
    versionAuthor: User;
    createdAt: string;
    updatedAt: string;
    deletedAt: string;
    description: string;
    difficultyExplanation: string;
};

export type Category = {
    id: number;
    name: string;
    parentCategory: (Category) | null;
    challenges: Array<Challenge>;
    challengeSeries: Array<ChallengeSeries>;
    childrenCategories: Array<Category>;
    createdAt: string;
    updatedAt: string;
};

export type ChallengeSeries = {
    id: number;
    title: string;
    description: string;
    effortLevel: 1 | 2 | 3 | 4 | 5;
    requiredExpertise: 0 | 1 | 2 | 3;
    difficultyExplanation: string;
    challenges: Array<Challenge>;
    category: Category;
    author: User;
    owners: Array<User>;
    version: number;
    versionCreatedAt: string;
    versionAuthor: User;
    createdAt: string;
    updatedAt: string;
    deletedAt: string;
};

export type Session = {
    id: number;
    user: User;
    token: string;
    created_at: string;
    updated_at: string;
    expires_at: string;
};

export type IGoogleAuthRequestBody = {
    credential: string;
    client_id: string;
};

export type GetChallengesResponse = Array<IChallenge>;

export type GetChallengesError = unknown;

export type CreateChallengeData = {
    body: CreateChallengeValidationSchema;
};

export type CreateChallengeResponse = IChallenge;

export type CreateChallengeError = unknown;

export type GetSeriesResponse = Array<IChallengeSeries>;

export type GetSeriesError = unknown;

export type CreateChallengeSeriesData = {
    body: CreateChallengeSeriesValidationSchema;
};

export type CreateChallengeSeriesResponse = IChallengeSeries;

export type CreateChallengeSeriesError = unknown;

export type GetCategoriesResponse = Array<ICategory>;

export type GetCategoriesError = unknown;

export type GoogleAuthData = {
    body: IGoogleAuthRequestBody;
};

export type GoogleAuthResponse = {
    token: unknown;
    user: User;
};

export type GoogleAuthError = unknown;

export type $OpenApiTs = {
    '/challenges': {
        get: {
            res: {
                /**
                 * Ok
                 */
                '200': Array<IChallenge>;
            };
        };
        post: {
            req: CreateChallengeData;
            res: {
                /**
                 * Created
                 */
                '201': IChallenge;
            };
        };
    };
    '/challenges/series': {
        get: {
            res: {
                /**
                 * Ok
                 */
                '200': Array<IChallengeSeries>;
            };
        };
        post: {
            req: CreateChallengeSeriesData;
            res: {
                /**
                 * Created
                 */
                '201': IChallengeSeries;
            };
        };
    };
    '/challenges/categories': {
        get: {
            res: {
                /**
                 * Ok
                 */
                '200': Array<ICategory>;
            };
        };
    };
    '/google-auth': {
        post: {
            req: GoogleAuthData;
            res: {
                /**
                 * Ok
                 */
                '200': {
                    token: unknown;
                    user: User;
                };
            };
        };
    };
};